@using Feature.GatedContent.Extensions
@using Feature.GatedContent.Models
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.RenderingVariants.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions
@using Sitecore.XA.Foundation.Variants.Abstractions.Fields
@using System.Linq
@model Feature.GatedContent.Models.GatedFormViewModel

<div class="@FormsConstants.EE.HelpWrapperClass">
  @if (Model != null)
  {
    using (Html.EEAccordianPanel("Global Settings Valid: " + Html.StyledBool(Model.CaptchaGatedFormSettings.GatedFormGlobalSettings.IsValidForRendering), Model.CaptchaGatedFormSettings.GatedFormGlobalSettings.IsValidForRendering))
    {
      <ul class="@FormsConstants.EE.UlStylingClass">

        @using (Html.Sxa().BeginEditFrame(Html.Sitecore().CurrentRendering.DataSource, FormsConstants.Core.EditFrameButtons.GatedFormTestSettings.ToString(), Model.DataModel.IsControlEditable))
        {
          <li>Force Invalid Form Markup: @Html.StyledSwitch(Model.DataSourceItemProxy.TestSettings.TestingForceInvalidFormMarkup)</li>
          <li>Force Form Submit Fail: @Html.StyledSwitch(Model.DataSourceItemProxy.TestSettings.TestingForceFormSubmitFail)</li>
          <li>Force Captcha Fail: @Html.StyledSwitch(Model.DataSourceItemProxy.TestSettings.TestingForceCaptchaFail)</li>
          <li>Force Captcha Success: @Html.StyledSwitch(Model.DataSourceItemProxy.TestSettings.TestingForceCaptchaSuccess)</li>
        }
      </ul>
    }
  }
  else
  {
    <p>Null Model</p>
  }
</div>
